CLUSTER=[% settings.cluster %]
PROJECT=[% settings.project %]
PROJECT_DIR=[% settings.project_dir %]
CONTROL_DIR=[% settings.control_dir %]
MAPPER_CMD=[% settings.mapper_cmd %]

export PERL_CARTON_PATH=${PROJECT_DIR}/local
export PERL5LIB=${PERL_CARTON_PATH}/lib/perl5:${PROJECT_DIR}/lib/perl5:${PERL5LIB}
export PATH=${PROJECT_DIR}/bin:${PERL_CARTON_PATH}/bin:${PATH}

$MAPPER_CMD log --message "starting monitor process for $PROJECT"

while true; do
  remaining=$($MAPPER_CMD stat --cluster $CLUSTER --time-left $JOB_ID)
  job_limit=$(cat ${CONTROL_DIR}/monitor_max_jobs_launch)
  min_time_left=$(cat ${CONTROL_DIR}/monitor_min_time_left)
  sleep_delay=$(cat ${CONTROL_DIR}/monitor_sleep)

  if [ -z $remaining ]; then
    $MAPPER_CMD log --message "unable to determine time remaining [$remaining] for job [$JOB_ID]" --level critical
    exit 1
  fi

  if [ $remaining -gt $min_time_left ]; then
    $MAPPER_CMD log --message "launching $job_limit more job(s) [remaining: ${remaining}h]" --level info
    $MAPPER_CMD launch --cluster $CLUSTER --project $PROJECT --limit $job_limit --verbose
  else
    $MAPPER_CMD log --message "resubmitting and exiting [remaining: ${remaining}h]" --level notice
    $MAPPER_CMD monitor --cluster $CLUSTER --project $PROJECT
    exit 0
  fi

  $MAPPER_CMD log --message "sleeping for $sleep_delay before launching more jobs" --level info
  sleep $sleep_delay

done

# vi: ft=sh
